// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Authentication
model User {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  type       String
  location   String? // Optional fields
  age        Int?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  lessons    Lesson[] @relation("UserLessons")

  UserLessons UserLessons[]
}

// Lessons
model Lesson {
  id          Int           @id @default(autoincrement())
  title       String
  description String
  slug        String
  level       String
  status      String
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  units       Unit[]
  users       User[]        @relation("UserLessons")
  UserLessons UserLessons[]
}

// Units
model Unit {
  id          Int        @id @default(autoincrement())
  lesson_id   Int
  title       String
  description String
  slug        String
  status      String
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  lesson      Lesson     @relation(fields: [lesson_id], references: [id])
  questions   Question[]
}

// Questions
model Question {
  id          Int      @id @default(autoincrement())
  unit_id     Int
  title       String
  description String
  slug        String
  status      String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  unit        Unit     @relation(fields: [unit_id], references: [id])
  answers     Answer[]
}

// Answers
model Answer {
  id          Int      @id @default(autoincrement())
  question_id Int
  answer      String
  is_correct  Boolean
  status      String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  question    Question @relation(fields: [question_id], references: [id])
}

// User and Lessons
model UserLessons {
  id         Int      @id @default(autoincrement())
  user_id    Int
  lesson_id  Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [user_id], references: [id])
  lesson     Lesson   @relation(fields: [lesson_id], references: [id])
}
